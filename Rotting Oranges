Problem = 994. Rotting Oranges

class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        fresh = 0
        q = deque()
        
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 2:
                    q.append((i, j))
                    grid[i][j] = 3
                elif grid[i][j] == 1:
                    fresh += 1
        
        count = 0
        
        if fresh == 0:
            return 0
        if not q:
            return -1
        
        while q:
            size = len(q)
            for _ in range(size):
                row, col = q.popleft()
                
                if row + 1 < m and grid[row + 1][col] == 1:
                    q.append((row + 1, col))
                    grid[row + 1][col] = 3
                
                if row - 1 >= 0 and grid[row - 1][col] == 1:
                    q.append((row - 1, col))
                    grid[row - 1][col] = 3
                
                if col + 1 < n and grid[row][col + 1] == 1:
                    q.append((row, col + 1))
                    grid[row][col + 1] = 3
                
                if col - 1 >= 0 and grid[row][col - 1] == 1:
                    q.append((row, col - 1))
                    grid[row][col - 1] = 3
            
            count += 1
        
        for i in range(m):
            for j in range(n):
                if grid[i][j] == 1:
                    return -1
        
        return count - 1


        
