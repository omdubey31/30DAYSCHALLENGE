Brackets in Matrix Chain Multiplication


class Solution:
    def matrixChainOrder(self, arr):
        # code here
        N = len(arr)
        dp = [[0] * N for _ in range(N)]
        for i in range(N):
            for j in range(N):
                if i == j:
                    dp[i][j] = 0
                    bracket = [[0] * N for _ in range(N)]
                    for l in range(2, N):
                        for i in range(1, N - l + 1):
                            j = i + l - 1
                            dp[i][j] = sys.maxsize
                            for k in range(i, j):
                                cost = dp[i][k] + dp[k + 1][j] + arr[i - 1] * arr[k] * arr[j]
                                if cost < dp[i][j]:
                                    dp[i][j] = cost + 1
                                    bracket[i][j] = k
            return print_parenthesis(1, N - 1, bracket)
def print_parenthesis(i, j, bracket):
    if i == j:
        return chr(ord('A') + i - 1)

    return "(" + print_parenthesis(i, bracket[i][j], bracket) + print_parenthesis(bracket[i][j] + 1, j, bracket) + ")"


